name: Build and Deploy Discourse to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      FF_NETWORK_PER_BUILD: "true"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y coreutils bash git grep jq

    - name: Start PostgreSQL Service and Attach to Network
      run: |
        docker run -d --name postgres \
          --network discourse_network \
          -e POSTGRES_DB=bootstrap \
          -e POSTGRES_USER=bootstrap \
          -e POSTGRES_PASSWORD='' \
          -e POSTGRES_HOST_AUTH_METHOD=trust \
          postgres:12-alpine

    - name: Start Redis Service and Attach to Network
      run: |
        docker run -d --name redis --network discourse_network redis:6

    - name: Clone Discourse Docker repository
      run: git clone --depth=1 https://github.com/discourse/discourse_docker $GITHUB_WORKSPACE/discourse

    - name: Bootstrap Discourse
      run: |
        cd $GITHUB_WORKSPACE/discourse
        cp samples/web_only.yml containers
        sed -i "s/smtp\.example\.com/smtp2\.example\.com/g" containers/web_only.yml
        sed -i "s/discourse\.example\.com/discourse2\.example\.com/g" containers/web_only.yml
        ./launcher bootstrap web_only --docker-args "--net=discourse_network"

    - name: Clean Up - Remove Docker Containers and Network
      if: always()
      run: |
        docker rm -f redis postgres
        docker network rm discourse_network

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and Push Docker Image to GitHub Container Registry
      uses: docker/build-push-action@v5
      with:
        context: $GITHUB_WORKSPACE/discourse
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$version-$config